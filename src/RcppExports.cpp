// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// BS
arma::rowvec BS(int t, arma::ivec knots, bool constantVE);
RcppExport SEXP _iDOVE_BS(SEXP tSEXP, SEXP knotsSEXP, SEXP constantVESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< bool >::type constantVE(constantVESEXP);
    rcpp_result_gen = Rcpp::wrap(BS(t, knots, constantVE));
    return rcpp_result_gen;
END_RCPP
}
// EM
void EM(arma::mat& w, arma::vec& beta, arma::vec& gamma, arma::vec& lambda, const arma::ivec& L, const arma::ivec& R, const arma::ivec& Rstar, const arma::ivec& t, const arma::imat& tind, const arma::mat& X, const arma::ivec& S, const arma::ivec& knots, bool constantVE, double threshold, int maxit);
RcppExport SEXP _iDOVE_EM(SEXP wSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP lambdaSEXP, SEXP LSEXP, SEXP RSEXP, SEXP RstarSEXP, SEXP tSEXP, SEXP tindSEXP, SEXP XSEXP, SEXP SSEXP, SEXP knotsSEXP, SEXP constantVESEXP, SEXP thresholdSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type Rstar(RstarSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::imat& >::type tind(tindSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< bool >::type constantVE(constantVESEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    EM(w, beta, gamma, lambda, L, R, Rstar, t, tind, X, S, knots, constantVE, threshold, maxit);
    return R_NilValue;
END_RCPP
}
// LL
arma::vec LL(const arma::vec& beta, const arma::vec& gamma, const arma::vec& lambda, const arma::ivec& L, const arma::ivec& R, const arma::ivec& t, const arma::imat& tind, const arma::mat& X, const arma::ivec& S, const arma::ivec& knots, bool constantVE);
RcppExport SEXP _iDOVE_LL(SEXP betaSEXP, SEXP gammaSEXP, SEXP lambdaSEXP, SEXP LSEXP, SEXP RSEXP, SEXP tSEXP, SEXP tindSEXP, SEXP XSEXP, SEXP SSEXP, SEXP knotsSEXP, SEXP constantVESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::imat& >::type tind(tindSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< bool >::type constantVE(constantVESEXP);
    rcpp_result_gen = Rcpp::wrap(LL(beta, gamma, lambda, L, R, t, tind, X, S, knots, constantVE));
    return rcpp_result_gen;
END_RCPP
}
// PLL
arma::vec PLL(arma::mat& w, const arma::vec& beta, const arma::vec& gamma, const arma::vec& lambda_init, const arma::ivec& L, const arma::ivec& R, const arma::ivec& Rstar, const arma::ivec& t, const arma::imat& tind, const arma::mat& X, const arma::ivec& S, const arma::ivec& knots, bool constantVE, double threshold, int maxit);
RcppExport SEXP _iDOVE_PLL(SEXP wSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP lambda_initSEXP, SEXP LSEXP, SEXP RSEXP, SEXP RstarSEXP, SEXP tSEXP, SEXP tindSEXP, SEXP XSEXP, SEXP SSEXP, SEXP knotsSEXP, SEXP constantVESEXP, SEXP thresholdSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type lambda_init(lambda_initSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type Rstar(RstarSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::imat& >::type tind(tindSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< bool >::type constantVE(constantVESEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(PLL(w, beta, gamma, lambda_init, L, R, Rstar, t, tind, X, S, knots, constantVE, threshold, maxit));
    return rcpp_result_gen;
END_RCPP
}
// EM_noX
void EM_noX(arma::mat& w, arma::vec& gamma, arma::vec& lambda, const arma::ivec& L, const arma::ivec& R, const arma::ivec& Rstar, const arma::ivec& t, const arma::imat& tind, const arma::ivec& S, const arma::ivec& knots, bool constantVE, double threshold, int maxit);
RcppExport SEXP _iDOVE_EM_noX(SEXP wSEXP, SEXP gammaSEXP, SEXP lambdaSEXP, SEXP LSEXP, SEXP RSEXP, SEXP RstarSEXP, SEXP tSEXP, SEXP tindSEXP, SEXP SSEXP, SEXP knotsSEXP, SEXP constantVESEXP, SEXP thresholdSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type Rstar(RstarSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::imat& >::type tind(tindSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< bool >::type constantVE(constantVESEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    EM_noX(w, gamma, lambda, L, R, Rstar, t, tind, S, knots, constantVE, threshold, maxit);
    return R_NilValue;
END_RCPP
}
// LL_noX
arma::vec LL_noX(const arma::vec& gamma, const arma::vec& lambda, const arma::ivec& L, const arma::ivec& R, const arma::ivec& t, const arma::imat& tind, const arma::ivec& S, const arma::ivec& knots, bool constantVE);
RcppExport SEXP _iDOVE_LL_noX(SEXP gammaSEXP, SEXP lambdaSEXP, SEXP LSEXP, SEXP RSEXP, SEXP tSEXP, SEXP tindSEXP, SEXP SSEXP, SEXP knotsSEXP, SEXP constantVESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::imat& >::type tind(tindSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< bool >::type constantVE(constantVESEXP);
    rcpp_result_gen = Rcpp::wrap(LL_noX(gamma, lambda, L, R, t, tind, S, knots, constantVE));
    return rcpp_result_gen;
END_RCPP
}
// PLL_noX
arma::vec PLL_noX(arma::mat& w, const arma::vec& gamma, const arma::vec& lambda_init, const arma::ivec& L, const arma::ivec& R, const arma::ivec& Rstar, const arma::ivec& t, const arma::imat& tind, const arma::ivec& S, const arma::ivec& knots, bool constantVE, double threshold, int maxit);
RcppExport SEXP _iDOVE_PLL_noX(SEXP wSEXP, SEXP gammaSEXP, SEXP lambda_initSEXP, SEXP LSEXP, SEXP RSEXP, SEXP RstarSEXP, SEXP tSEXP, SEXP tindSEXP, SEXP SSEXP, SEXP knotsSEXP, SEXP constantVESEXP, SEXP thresholdSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type lambda_init(lambda_initSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type Rstar(RstarSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::imat& >::type tind(tindSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< bool >::type constantVE(constantVESEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(PLL_noX(w, gamma, lambda_init, L, R, Rstar, t, tind, S, knots, constantVE, threshold, maxit));
    return rcpp_result_gen;
END_RCPP
}
// Init
arma::imat Init(const arma::ivec& L, const arma::ivec& Rstar, const arma::ivec& W, const arma::ivec& t);
RcppExport SEXP _iDOVE_Init(SEXP LSEXP, SEXP RstarSEXP, SEXP WSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::ivec& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type Rstar(RstarSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(Init(L, Rstar, W, t));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_iDOVE_BS", (DL_FUNC) &_iDOVE_BS, 3},
    {"_iDOVE_EM", (DL_FUNC) &_iDOVE_EM, 15},
    {"_iDOVE_LL", (DL_FUNC) &_iDOVE_LL, 11},
    {"_iDOVE_PLL", (DL_FUNC) &_iDOVE_PLL, 15},
    {"_iDOVE_EM_noX", (DL_FUNC) &_iDOVE_EM_noX, 13},
    {"_iDOVE_LL_noX", (DL_FUNC) &_iDOVE_LL_noX, 9},
    {"_iDOVE_PLL_noX", (DL_FUNC) &_iDOVE_PLL_noX, 13},
    {"_iDOVE_Init", (DL_FUNC) &_iDOVE_Init, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_iDOVE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
